" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ================ Setup Vundle Package management ==================

" TODO look into Vundle again?
"filetype off
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()
" Default Vundle package (it manages itself), required
"Plugin 'VundleVim/Vundle.vim'

" Put Vundle Packages here

" Autocompletion
"Plugin 'Valloric/YouCompleteMe'

" Rust TODO See if we can remove this into the rust package
"Plugin 'rust-lang/rust.vim'

" Golang
"Plugin 'fatih/vim-go'

"call vundle#end()
"filetype plugin indent on

" ================ General Config ====================

set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

"turn on syntax highlighting
syntax on

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

"
" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-c> :nohl<CR>


" ================ Persistent Undo ======================

let vimDir = '$HOME/.vim_local'
let &runtimepath.=','.vimDir " Add the vimDir to the vim runtimepath

if has('persistent_undo') " has persistent undo installed
    let myUndoDir = expand(vimDir . '/undodir')

    " Create the directory for storing the undo stack
    call system('mkdir -p ' . vimDir)
    call system('mkdir -p ' . myUndoDir)

    " set the vim variables for persistent undo
    let &undodir = myUndoDir
    set undofile
endif

" ================ Swap Files ==========================

" Put swap files in a specific directory so they don't clutter everything
set swapfile
set dir=~/.swp-tmp

" ================ Plugins ==========================

source $DOTFILES_INSTALL_DIR/vim/tmux_navigator.vim " Allow vim and tmux splits to be switched between effortlessly
